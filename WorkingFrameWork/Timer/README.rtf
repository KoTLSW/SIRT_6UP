{\rtf1\ansi\ansicpg936\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red4\green255\blue253;\red0\green116\blue0;\red0\green0\blue0;
\red100\green56\blue32;\red196\green26\blue22;\red170\green13\blue145;\red63\green110\blue116;\red46\green13\blue110;
\red92\green38\blue153;\red38\green71\blue75;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c1569\c100000\c99216;\csgenericrgb\c0\c45600\c0;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c24700\c43100\c45600;\csgenericrgb\c18100\c5200\c43100;
\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c14900\c27800\c29400;\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0

\f0\fs144 \cf2 \CocoaLigature0 code sample:\

\fs22 \cf3 //\cf4 \
\cf3 //  ViewController.m\cf4 \
\cf3 //  MKTimer_Sample\cf4 \
\cf3 //\cf4 \
\cf3 //  Created by Michael on 16/11/4.\cf4 \
\cf3 //  Copyright \'a9 2016
\f1 \'c4\'ea
\f0  Michael. All rights reserved.\cf4 \
\cf3 //\cf4 \
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf5 #import \cf6 "ViewController.h"\cf5 \
#import \cf6 "MK_Timer.pch"\cf5 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf4 \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf7 @implementation\cf4  ViewController\
\{\
    \cf8 MKTimer\cf4  *mktimer;\
    \cf8 MKCountDownTimer\cf4  *mkCountDownTimer;\
\}\
\
- (\cf7 void\cf4 )viewDidLoad\
\{\
    [\cf7 super\cf4  \cf9 viewDidLoad\cf4 ];\
    \
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf3 //*********************** MKTimer Sample_1 *********************************\cf4 \
\cf3 //    MKTimer *mktimer = [[MKTimer alloc] init];\cf4 \
\cf3 //    //
\f1 \'c9\'e8\'d6\'c3\'d2\'bb\'b8\'f6\'b6\'a8\'ca\'b1\'c6\'f7
\f0 \cf4 \
\cf3 //    [mktimer setTimer:0.1];\cf4 \
\cf3 //    //
\f1 \'bf\'aa\'c6\'f4\'b6\'a8\'ca\'b1\'c6\'f7\'b2\'a2\'d4\'da
\f0  label 
\f1 \'d5\'b9\'ca\'be\'b3\'f6\'c0\'b4
\f0 \cf4 \
\cf3 //    [mktimer startTimerWithTextField:_showLb];\cf4 \
\cf3 ////    
\f1 \'d6\'b4\'d0\'d0\'cd\'ea\'b1\'cf\'bd\'e1\'ca\'f8\'b6\'a8\'ca\'b1\'c6\'f7
\f0 \cf4 \
\cf3 //    [mktimer endTimer];\cf4 \
 \
    \
\cf3 //************************ MKTimer Sample_2 ********************************\cf4 \
     \cf3 //  MKTimer Sample_2  if in cycle need to create a Thread, following the (timeWorking)\cf4 \
     \
    \cf8 mktimer\cf4  = [[\cf8 MKTimer\cf4  \cf9 alloc\cf4 ] \cf9 init\cf4 ];\
    \cf10 NSThread\cf4  *myThread = [[\cf10 NSThread\cf4  \cf9 alloc\cf4 ] \cf9 initWithTarget\cf4 :\cf7 self\cf4  \cf9 selector\cf4 :\cf7 @selector\cf4 (timeWorking) \cf9 object\cf4 :\cf7 nil\cf4 ];\
    [myThread \cf9 start\cf4 ];\
    \
\
\cf3 //************************* MKCountDown Timer Sample_1**********************\cf4 \
\cf3 //    mkCountDownTimer = [[MKCountDownTimer alloc] init];\cf4 \
\cf3 //    [mkCountDownTimer setTimerCountDown:0.1];\cf4 \
\cf3 //    _showCD_Lb.stringValue = @"20";\cf4 \
\cf3 //    [mkCountDownTimer startCountDownWithTextField:_showCD_Lb];\cf4 \
\
    \
\cf3 //************************* MKCountDown Timer Sample_2**********************\cf4 \
    \cf8 mkCountDownTimer\cf4  = [[\cf8 MKCountDownTimer\cf4  \cf9 alloc\cf4 ] \cf9 init\cf4 ];\
    \cf3 //refer CountDownTimer_StartBtn/CountDownTimer_StopBtn\cf4 \
    \
    \
    \
\cf3 //*************************  GetTimeDay Sample *****************************\cf4 \
    \cf10 NSString\cf4  *currentDay = [[\cf8 GetTimeDay\cf4  \cf11 shareInstance\cf4 ] \cf11 getCurrentDay\cf4 ];\
    \cf10 NSString\cf4  *currentTime = [[\cf8 GetTimeDay\cf4  \cf11 shareInstance\cf4 ] \cf11 getCurrentTime\cf4 ];\
    \cf10 NSString\cf4  *currentSecond = [[\cf8 GetTimeDay\cf4  \cf11 shareInstance\cf4 ] \cf11 getCurrentSecond\cf4 ];\
    \cf10 NSString\cf4  *fileTime = [[\cf8 GetTimeDay\cf4  \cf11 shareInstance\cf4 ] \cf11 getFileTime\cf4 ];\
    \
    \cf9 NSLog\cf4 (\cf6 @"\\n currentDay========%@\\n currentTime=========%@\\n currentSecond=========%@\\n fileTIme==========%@\\n"\cf4 ,currentDay,currentTime,currentSecond,fileTime);\
\cf3 //==============================================================================\cf4 \
\}\
\
\
-(\cf7 void\cf4 )timeWorking\
\{\
    \cf7 int\cf4  i=\cf12 0\cf4 ;\
    \cf7 while\cf4  (\cf12 1\cf4 )\
    \{\
        \cf7 if\cf4  (i==\cf12 0\cf4 )\
        \{\
            \cf3 //
\f1 \'c9\'e8\'d6\'c3\'d2\'bb\'b8\'f6\'b6\'a8\'ca\'b1\'c6\'f7
\f0 \cf4 \
            [\cf8 mktimer\cf4  \cf11 setTimer\cf4 :\cf12 0.1\cf4 ];\
                \
            \cf3 //
\f1 \'bf\'aa\'c6\'f4\'b6\'a8\'ca\'b1\'c6\'f7\'b2\'a2\'d4\'da
\f0  label 
\f1 \'d5\'b9\'ca\'be\'b3\'f6\'c0\'b4
\f0 \cf4 \
            [\cf8 mktimer\cf4  \cf11 startTimerWithTextField\cf4 :\cf8 _showLb\cf4 ];\
        \}\
        \
        \cf7 if\cf4  (i==\cf12 15\cf4 )\
        \{\
            \cf3 //
\f1 \'d6\'b4\'d0\'d0\'cd\'ea\'b1\'cf\'bd\'e1\'ca\'f8\'b6\'a8\'ca\'b1\'c6\'f7
\f0 \cf4 \
            [\cf8 mktimer\cf4  \cf11 endTimer\cf4 ];\
            \cf7 break\cf4 ;\
        \}\
        \
        i++;\
        \cf9 sleep\cf4 (\cf12 1\cf4 );\
        \cf9 NSLog\cf4 (\cf6 @"========== %d =========="\cf4 ,i);\
    \}\
\}\
\
\
\
\cf3 /**\
 *  
\f1 \'b5\'b9\'bc\'c6\'ca\'b1
\f0 \
 */\cf4 \
\cf3 //************************ CountDownTimer_StartBtn ***************************************\cf4 \
- (\cf7 IBAction\cf4 )clickToStartCountDownTimer:(\cf10 NSButton\cf4  *)sender\
\{\
    \cf3 //
\f1 \'b8\'b3\'d6\'b5
\f0 ,
\f1 \'c5\'d0\'b6\'cf\'ca\'c7\'b7\'f1\'b4\'bf\'ca\'fd\'d7\'d6\'b4\'ab\'c8\'eb
\f0 ,
\f1 \'b7\'f1\'d4\'f2\'b7\'b5\'bb\'d8
\f0 \cf4 \
    \cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  = \cf6 @"20"\cf4 ;\
    \
    \cf7 if\cf4  ([\cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  \cf9 isEqualToString\cf4 :\cf6 @"0"\cf4 ] || \cf8 _showCD_Lb\cf4 ==\cf7 nil\cf4  || [\cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  \cf9 isEqualToString\cf4 :\cf6 @""\cf4 ] || [\cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  \cf9 isEqualToString\cf4 :\cf6 @" "\cf4 ] || \cf8 _showCD_Lb\cf4  == \cf12 0\cf4 )\
    \{\
        \cf7 return\cf4 ;\
    \}\
    \
    [\cf8 mkCountDownTimer\cf4  \cf11 setTimerCountDown\cf4 :\cf12 0.1\cf4 ];\
    [\cf8 mkCountDownTimer\cf4  \cf11 startCountDownWithTextField\cf4 :\cf8 _showCD_Lb\cf4 ];\
\}\
\
\cf3 //************************ CountDownTimer_StopBtn ***************************************\cf4 \
- (\cf7 IBAction\cf4 )clickToStopOrContiuneCountDownTimer:(\cf10 NSButton\cf4  *)sender\
\{\
    \cf7 if\cf4  ([\cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  \cf9 isEqualToString\cf4 :\cf6 @"0"\cf4 ] || \cf8 _showCD_Lb\cf4 ==\cf7 nil\cf4  || [\cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  \cf9 isEqualToString\cf4 :\cf6 @""\cf4 ] || [\cf8 _showCD_Lb\cf4 .\cf10 stringValue\cf4  \cf9 isEqualToString\cf4 :\cf6 @" "\cf4 ] || \cf8 _showCD_Lb\cf4  == \cf12 0\cf4 )\
    \{\
        \cf7 return\cf4 ;\
    \}\
    \
    \cf7 if\cf4  ([sender.\cf10 title\cf4  \cf9 isEqualToString\cf4 :\cf6 @"CD_Stop"\cf4 ])\
    \{\
        [\cf8 mkCountDownTimer\cf4  \cf11 stopCountDownTimer\cf4 ];\
        sender.\cf10 title\cf4  = \cf6 @"CD_Continue"\cf4 ;\
        \cf7 return\cf4 ;\
    \}\
    \
    \cf7 if\cf4  ([sender.\cf10 title\cf4  \cf9 isEqualToString\cf4 :\cf6 @"CD_Continue"\cf4 ])\
    \{\
        [\cf8 mkCountDownTimer\cf4  \cf11 continueCountDownTimer\cf4 ];\
        sender.\cf10 title\cf4  = \cf6 @"CD_Stop"\cf4 ;\
        \cf7 return\cf4 ;\
    \}\
\}\
\
\
\
- (\cf7 void\cf4 )setRepresentedObject:(\cf7 id\cf4 )representedObject \{\
    [\cf7 super\cf4  \cf9 setRepresentedObject\cf4 :representedObject];\
\
    \cf3 // Update the view, if already loaded.\cf4 \
\}\
\
\pard\tx529\pardeftab529\pardirnatural\partightenfactor0
\cf7 @end\cf4 \
}